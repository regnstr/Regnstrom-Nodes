<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DefaultCustomNode.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAkmaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNr
        ZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0MiA3OS4x
        NjA5MjQsIDIwMTcvMDcvMTMtMDE6MDY6MzkgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0
        cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24g
        cmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6
        ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczp4bXBNTT0iaHR0cDovL25z
        LmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
        LzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2Jl
        LmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdp
        bmRvd3MpIiB4bXA6Q3JlYXRlRGF0ZT0iMjAxOC0xMC0yNlQxMDoyODo1NiswMjowMCIgeG1wOk1ldGFk
        YXRhRGF0ZT0iMjAxOC0xMC0yNlQxMDoyOToxMSswMjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTgtMTAt
        MjZUMTA6Mjk6MTErMDI6MDAiIGRjOmZvcm1hdD0iaW1hZ2UvcG5nIiB4bXBNTTpJbnN0YW5jZUlEPSJ4
        bXAuaWlkOjVkZjI3OTIwLTE1ZjUtYzQ0YS04ZjJmLWM0YzBkMDNjNTA0ZiIgeG1wTU06RG9jdW1lbnRJ
        RD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjliNTE2NDZhLThhMzQtMWU0ZC1iY2Q2LTU0MjFlYWUyODg5
        MyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjhmNTUxODIzLTdlOTUtYWQ0Ny04ZDFh
        LThkMjVlODQ4ZWFhYyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9
        InNSR0IgSUVDNjE5NjYtMi4xIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0
        OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4ZjU1MTgyMy03ZTk1LWFk
        NDctOGQxYS04ZDI1ZTg0OGVhYWMiIHN0RXZ0OndoZW49IjIwMTgtMTAtMjZUMTA6Mjg6NTYrMDI6MDAi
        IHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiLz4gPHJkZjps
        aSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmVlM2E4ODZmLWNk
        ZjktYjI0ZS05MzZiLTVkYTIyMDM3ZWU5MiIgc3RFdnQ6d2hlbj0iMjAxOC0xMC0yNlQxMDoyOToxMSsw
        MjowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgc3RF
        dnQ6Y2hhbmdlZD0iLyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY29udmVydGVkIiBzdEV2dDpwYXJh
        bWV0ZXJzPSJmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AgdG8gaW1hZ2UvcG5nIi8+
        IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJkZXJpdmVkIiBzdEV2dDpwYXJhbWV0ZXJzPSJjb252ZXJ0ZWQg
        ZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL3BuZyIvPiA8cmRmOmxp
        IHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6NWRmMjc5MjAtMTVm
        NS1jNDRhLThmMmYtYzRjMGQwM2M1MDRmIiBzdEV2dDp3aGVuPSIyMDE4LTEwLTI2VDEwOjI5OjExKzAy
        OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdpbmRvd3MpIiBzdEV2
        dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8eG1wTU06RGVyaXZlZEZy
        b20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDplZTNhODg2Zi1jZGY5LWIyNGUtOTM2Yi01ZGEyMjAz
        N2VlOTIiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6OGY1NTE4MjMtN2U5NS1hZDQ3LThkMWEtOGQy
        NWU4NDhlYWFjIiBzdFJlZjpvcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6OGY1NTE4MjMtN2U5NS1h
        ZDQ3LThkMWEtOGQyNWU4NDhlYWFjIi8+IDxwaG90b3Nob3A6VGV4dExheWVycz4gPHJkZjpCYWc+IDxy
        ZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0iUiIgcGhvdG9zaG9wOkxheWVyVGV4dD0iUiIvPiA8L3Jk
        ZjpCYWc+IDwvcGhvdG9zaG9wOlRleHRMYXllcnM+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+
        IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+6w78jAAAClRJREFUeF7tnWlsXFcVx8NSsRQJ
        pSgNaiOgkSpBUVVB2SQgIGhTAVWjojYFqSpBIEQ/lE91Wlq2IhZRgQRCIDYBQvAJRNUlTeJszVI7JF5i
        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
        RK5CYII=
</value>
  </data>
  <data name="DefaultCustomNode.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAnxaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNr
        ZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0MiA3OS4x
        NjA5MjQsIDIwMTcvMDcvMTMtMDE6MDY6MzkgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0
        cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24g
        cmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6
        ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczp4bXBNTT0iaHR0cDovL25z
        LmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
        LzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2Jl
        LmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdp
        bmRvd3MpIiB4bXA6Q3JlYXRlRGF0ZT0iMjAxOC0xMC0yNlQxMDoyODo1NiswMjowMCIgeG1wOk1ldGFk
        YXRhRGF0ZT0iMjAxOC0xMC0yNlQxMDozMToxMCswMjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTgtMTAt
        MjZUMTA6MzE6MTArMDI6MDAiIGRjOmZvcm1hdD0iaW1hZ2UvcG5nIiB4bXBNTTpJbnN0YW5jZUlEPSJ4
        bXAuaWlkOjY4OGViNjgyLWVlNzYtMWM0MC1iMmUxLTA1NjhkMTliZDZkOCIgeG1wTU06RG9jdW1lbnRJ
        RD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOmM1NTc2Mjg0LTZjYTgtOTM0Yy05OWRkLTI5YjlmYTU4ZGM4
        OCIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjhmNTUxODIzLTdlOTUtYWQ0Ny04ZDFh
        LThkMjVlODQ4ZWFhYyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9
        InNSR0IgSUVDNjE5NjYtMi4xIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0
        OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo4ZjU1MTgyMy03ZTk1LWFk
        NDctOGQxYS04ZDI1ZTg0OGVhYWMiIHN0RXZ0OndoZW49IjIwMTgtMTAtMjZUMTA6Mjg6NTYrMDI6MDAi
        IHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiLz4gPHJkZjps
        aSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjMyMTkyYTdlLWE3
        NDEtYjk0NS1hOWEyLTM4NzI2OWQ2NWNlMiIgc3RFdnQ6d2hlbj0iMjAxOC0xMC0yNlQxMDozMDo1Nysw
        MjowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgc3RF
        dnQ6Y2hhbmdlZD0iLyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNl
        SUQ9InhtcC5paWQ6OTA5YjY2NmUtY2ZjMC0yZTQyLWFmZDUtNTc5ZjMwMWUyNGFjIiBzdEV2dDp3aGVu
        PSIyMDE4LTEwLTI2VDEwOjMxOjEwKzAyOjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90
        b3Nob3AgQ0MgKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9u
        PSJjb252ZXJ0ZWQiIHN0RXZ0OnBhcmFtZXRlcnM9ImZyb20gYXBwbGljYXRpb24vdm5kLmFkb2JlLnBo
        b3Rvc2hvcCB0byBpbWFnZS9wbmciLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImRlcml2ZWQiIHN0RXZ0
        OnBhcmFtZXRlcnM9ImNvbnZlcnRlZCBmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3Ag
        dG8gaW1hZ2UvcG5nIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJ
        RD0ieG1wLmlpZDo2ODhlYjY4Mi1lZTc2LTFjNDAtYjJlMS0wNTY4ZDE5YmQ2ZDgiIHN0RXZ0OndoZW49
        IjIwMTgtMTAtMjZUMTA6MzE6MTArMDI6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rv
        c2hvcCBDQyAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhp
        c3Rvcnk+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjkwOWI2NjZl
        LWNmYzAtMmU0Mi1hZmQ1LTU3OWYzMDFlMjRhYyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo4ZjU1
        MTgyMy03ZTk1LWFkNDctOGQxYS04ZDI1ZTg0OGVhYWMiIHN0UmVmOm9yaWdpbmFsRG9jdW1lbnRJRD0i
        eG1wLmRpZDo4ZjU1MTgyMy03ZTk1LWFkNDctOGQxYS04ZDI1ZTg0OGVhYWMiLz4gPHBob3Rvc2hvcDpU
        ZXh0TGF5ZXJzPiA8cmRmOkJhZz4gPHJkZjpsaSBwaG90b3Nob3A6TGF5ZXJOYW1lPSJSIiBwaG90b3No
        b3A6TGF5ZXJUZXh0PSJSIi8+IDwvcmRmOkJhZz4gPC9waG90b3Nob3A6VGV4dExheWVycz4gPC9yZGY6
        RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5yPwwa
        AAABsUlEQVRYR82WoU/DUBCHpwhqEhw4HEERFHNMIidxk5NY/gcsFosiISQIkBAgGQSyMFjGljK6NcFi
        y13zulwvv94Dkj0QX9J+d+/1t/X1tZU0Tf8UKEMCZUigDAmUIYFSc3pzvEDUid0SGsQKGusDSg1NXn+N
        +ldJkqSI6D16vu5c7lPfFhpvAaWGJt4ZxaMIXVzy0Ls7/GkIKDUygPulhVsg/x1XX0LzIKDU0IQ6wKKo
        ZeujO3g64frwbXBP59tyvAWUGiuAq88Rrclk/MnwsaxbQKnxBXA9DV6MVg8CSs2/D0Dn01vAPeftsz06
        n5c9ZUCpsQLQcWERch/3y/EWUGpAgNLHsNN/PCK3huZBQKmhCacBLHrDlwvqne1GhOB7n++CRBXNUQaU
        GhlA34LcuwCraLwFlBoQIFuEfEG+MHuuc58e6wNKTVkAV2vG4/iDa+3u7QGdL8uxPqDUeAJs/PY9wECp
        8QQobEK67gNKjRXA1Wv8CHLdPYo1WbeAUvONAFXefvO34Sy24uyTzJo87+EFOYsA+Udpi9j09DSJddSD
        gDIkUIYEypBAGRIow5FWvgC1jwUszBQx/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>